#!/bin/bash

BROKER="localhost:9092"
SCHEMA="http://localhost:8081"

cd `dirname $0`


usage() {
  echo "
  Populate topics wiith test data and publish it to Kafka.
  Option                                   Description
  ------                                   -----------
  -f | --file FILENAME                     Limit load to specified filename                  
  -d | --docker                            Run from within docker - change to appropriate hostnames and ports
  "
  exit 0
}

while [ "$1" != "" ]; do
  case $1 in
    -f | --file )
           shift
           filename=$1
           ;;
    -d | --docker )
           BROKER="kafka:29092"
           SCHEMA="http://schema-registry:8081"
           ;;
    -h | --help )           
           usage
           exit
           ;;
    * )    
           usage
           exit 1
  esac
  shift
done



load_repair() {
    cat repair.json | kafka-avro-console-producer  \
       --broker-list ${BROKER} \
       --topic repair_raw  \
       --property schema.registry.url=${SCHEMA} \
       --property value.schema='
       {
       "type": "record",
       "name": "myrecord",
       "fields": [
       {"name": "repair_state",  "type": "string" }
       , {"name": "long",  "type": "float" }
       , {"name": "lat",  "type": "float" }
       ]
       }'
}

load_post_code() {
    cat post_code.json | kafka-avro-console-producer  \
       --broker-list ${BROKER} \
       --topic post_code_raw  \
       --property schema.registry.url=${SCHEMA} \
       --property value.schema='
       {
       "type": "record",
       "name": "myrecord",
       "fields": [
       {"name": "post_code",  "type": "string" }
       , {"name": "locality",  "type": "string" }
       , {"name": "state", "type": "string" }
       , {"name": "long",  "type": "float" }
       , {"name": "lat",  "type": "float" }
       ]
       }'
}

load_phone_event() {
    cat phone_event.json | kafka-avro-console-producer  \
       --broker-list ${BROKER} \
       --topic phone_event_raw \
       --property schema.registry.url=${SCHEMA} \
       --property value.schema='
       {
       "type": "record",
       "name": "myrecord",
       "fields": [
       {"name": "customer_name",  "type": "string" }
       , {"name": "phone_model", "type": "string" }
       , {"name": "event", "type": "string" }
       , {"name": "post_code", "type": "string" }
       ]
       }'
}       

load_repair
load_post_code
load_phone_event
